{"version":3,"sources":["particles.js","webScript.js"],"names":["Particle","x","y","velocityX","velocityY","size","color","veloctyY","dodge","ctx","beginPath","arc","Math","PI","fillStyle","fill","mouse","window","innerWidth","innerHeight","distance","calcDistance","radius","otherX","otherY","deltaX","deltaY","sqrt","canvas","document","getElementById","getContext","MOUSE_RADIUS","MAX_PARTICLES","CONNECTING_BAR_LENGTH","MAX_SIZE","MIN_SPEED","width","height","particles","addEventListener","event","createParticles","numParticles","i","random","push","mainLoop","clearRect","particle","update","draw","connectParticles","requestAnimationFrame","opacity","a","length","b","strokeStyle","lineWidth","moveTo","lineTo","stroke"],"mappings":"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","file":"webScript.858fdbc3.js","sourceRoot":"..","sourcesContent":["export default class Particle {\r\n  constructor(x, y, velocityX, velocityY, size, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.velocityX = velocityX;\r\n    this.veloctyY = velocityY;\r\n    this.size = size;\r\n    this.color = color;\r\n    this.dodge = 7.5;         //how much the particle tries to dodge the mouse\r\n  }\r\n\r\n  draw(ctx){\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2, false);\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n  }\r\n\r\n  update(mouse) {\r\n    if (this.x < 0 || this.x > window.innerWidth) this.velocityX *= -1; //flip direction moving when approaching window\r\n    if (this.y < 0 || this.y > window.innerHeight) this.veloctyY *= -1;\r\n\r\n    const distance = this.calcDistance(mouse.x, mouse.y);                    //if\r\n    if (distance < mouse.radius + this.size) {\r\n      if (mouse.x < this.x) {\r\n        this.x += this.dodge;\r\n      } else {\r\n        this.x -= this.dodge;\r\n      }\r\n      if (mouse.y < this.y) {\r\n        this.y += this.dodge;\r\n      } else {\r\n        this.y -= this.dodge;\r\n      }\r\n\r\n      if (this.x < 0) this.x = 0 + this.size / 2;\r\n      if (this.x > window.innerWidth) this.x = window.innerWidth - this.size / 2;\r\n      if (this.y < 0) this.y = 0 + this.size / 2;\r\n      if (this.y > window.innerHeight) this.y = window.innerHeight - this.size / 2;\r\n    } else{\r\n      this.x += this.velocityX;\r\n      this.y += this.veloctyY;\r\n    }\r\n  }\r\n\r\n  calcDistance(otherX, otherY) {\r\n    let deltaX = otherX - this.x;\r\n    let deltaY = otherY - this.y;\r\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n  }\r\n}\r\n","import Particle from \"./particles\";\r\n\r\nconst canvas = document.getElementById('mainCanvas');\r\nconst ctx = canvas.getContext('2d');\r\n\r\nconst MOUSE_RADIUS = .0075;                   //area of effect for mouse\r\nconst MAX_PARTICLES = .00015;                 //how many particles\r\nconst CONNECTING_BAR_LENGTH = .0065;          //how long are the \"bars\" that connect the dots\r\nconst MAX_SIZE = 5;\r\nconst MIN_SPEED = 5;\r\n\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\n\r\nlet particles = [];         //array to hold particles\r\n\r\nlet mouse = {               //setup our mouse object\r\n    x: null,\r\n    y: null,\r\n    radius: (canvas.height*MOUSE_RADIUS) * (canvas.width*MOUSE_RADIUS),\r\n}\r\n\r\nwindow.addEventListener('mousemove', function (event) {\r\n    mouse.x = event.x;\r\n    mouse.y = event.y;\r\n});\r\n\r\nwindow.addEventListener('resize', function (event) {\r\n    canvas.width = innerWidth;\r\n    canvas.height = innerHeight;\r\n    mouse.radius = (canvas.height*MOUSE_RADIUS) * (canvas.width*MOUSE_RADIUS);\r\n    createParticles();\r\n});\r\n\r\nwindow.addEventListener('mouseout', function (event) {\r\n    mouse.x = null;\r\n    mouse.y = null;\r\n});\r\n\r\nfunction createParticles(){\r\n    particles = []\r\n    const numParticles = (canvas.height * canvas.width) * MAX_PARTICLES;\r\n    for (let i = 0; i < numParticles; i++){\r\n        let size = Math.random() * MAX_SIZE + 1;\r\n        let x = Math.random() * innerWidth - MAX_SIZE * 2;\r\n        let y = Math.random() * innerHeight - MAX_SIZE*2;\r\n        let velocityX = Math.random() * MIN_SPEED - MIN_SPEED/2;\r\n        let velocityY = Math.random() * MIN_SPEED - MIN_SPEED/2;\r\n        let color = \"#2baba9\";\r\n        particles.push(new Particle(x, y, velocityX, velocityY, size, color));\r\n    }\r\n}\r\n\r\nfunction mainLoop() {\r\n    ctx.clearRect(0,0, innerWidth, innerHeight);\r\n    for(let particle of particles){\r\n        particle.update(mouse);\r\n        particle.draw(ctx);        \r\n    }\r\n    connectParticles();\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nfunction connectParticles(){\r\n    let opacity = 1;\r\n    for (let a = 0; a < particles.length; a++){\r\n        for (let b = a; b < particles.length; b++){\r\n            let distance = particles[a].calcDistance(particles[b].x, particles[b].y);\r\n            if (distance < (canvas.width * CONNECTING_BAR_LENGTH) * (canvas.height * CONNECTING_BAR_LENGTH)) {\r\n                opacity = 1 - (distance/150);\r\n                ctx.strokeStyle = 'rgba(43,171,169,'+ opacity + ')';\r\n                ctx.lineWidth = 1;\r\n                ctx.beginPath();\r\n                ctx.moveTo(particles[a].x, particles[a].y);\r\n                ctx.lineTo(particles[b].x, particles[b].y);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ncreateParticles();\r\nmainLoop();\r\n\r\n"]}